{"version":3,"file":"smartsettings.es.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/index.js"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import style from './index.css'\n\n/**\n * @class SmartSettings\n * @classdesc SmartSettings module, returns new SmartSettings instance\n * @param {string} name - name of the SmartSettings panel\n * @param {number} left - position of the SmartSettings panel on X axis\n * @param {number} top - position of the SmartSettings panel on Y axis\n * @example\n * const mySettings = new SmartSettings('My Settings', 10, 10)\n*/\nclass SmartSettings {\n    constructor(name = 'SmartSettings', left = 0, top = 0) {\n        this.name = name\n        this.left = left\n        this.top = top\n\n        /**\n         * @property {boolean} _visible\n         * @private\n         */\n        this._visible = true\n\n        /**\n         * @property {boolean} _open\n         * @private\n         */\n        this._open = true\n\n        /**\n         * @property {boolean} _draggable\n         * @private\n         */\n        this._draggable = false\n\n        /**\n         * @property {Node} _panel\n         * @private\n         */\n        this._panel = null\n\n        /**\n         * @property {object} _controls\n         * @private\n         */\n        this._controls = {}\n\n        this._create(this.name, this.top, this.left)\n    }\n\n    /* Utility methods */\n    \n    /**\n     * Creates any DOM element\n     * @param {string} type - type of the DOM element\n     * @param {Object} attributes - object with all attributes for the DOM element\n     * @returns {Node}\n     * @private \n     */\n    _createElement(type, attributes) {\n        let element = document.createElement(type)\n        if (attributes) {\n            for (let key in attributes) {\n                if (key === 'class') {\n                    element.classList.add.apply(\n                        element.classList,\n                        [attributes[key]]\n                    )\n                } else {\n                    element[key] = attributes[key]\n                }\n            }\n        }\n        return element\n    }\n\n\n    /* Helper methods */\n\n    /**\n     * Creates settings panel, invoked on class construction\n     * @returns {void}\n     * @private\n     */\n    _create() {\n        let panelAttributes = {\n            class: 'sms-panel',\n            id: `sms_panel_${this.name}`,\n            style: `top: ${this.top}px; left: ${this.left}px; z-index: 2`\n        }\n        let panel = this._createElement('div', panelAttributes)\n        let header = this._createElement('div', { class: 'sms-panel-header' })\n        let body = this._createElement('div', { class: 'sms-panel-body' })\n        let paragraph = this._createElement('p', { class: 'sms-panel-header-name' })\n\n        paragraph.innerText = this.name\n        header.appendChild(paragraph)\n        panel.appendChild(header)\n        panel.appendChild(body)\n        this._panel = panel\n        document.body.appendChild(this._panel)\n    }\n\n\n    /* Basic methods */\n\n    /**\n     * Removes settings panel from the DOM and removes all sections and controls\n     * @returns {void}\n     * @example\n     * mySettings.destroy()\n     */\n    destroy() {\n        if (this._panel && this._panel.parentElement) {\n            this._panel.parentElement.removeChild(this._panel)\n        }\n        this._panel = null\n        this._controls = {}\n    }\n\n    /**\n     * Shows settings panel\n     * @returns {void}\n     * @example\n     * mySettings.show()\n     */\n    show() {\n        this._panel.classList.remove('hide')\n        this._visible = true\n    }\n\n    /**\n     * Hides settings panel\n     * @returns {void}\n     * @example\n     * mySettings.hide()\n     */\n    hide() {\n        this._panel.classList.add('hide')\n        this._visible = false\n    }\n\n    /**\n     * Open settings panel\n     * @example\n     * mySettings.open()\n     */\n    open() {\n        let panelBody = this._panel.childNodes[1]\n        if (panelBody.classList[1] === 'hide') {\n            panelBody.classList.remove('hide')\n        } \n        this._open = true\n    }\n\n    /**\n     * Close settings panel\n     * @example\n     * mySettings.close()\n     * \n     */\n    close() {\n        let panelBody = this._panel.childNodes[1]\n        panelBody.classList.add('hide')\n        this._open = false\n    }\n\n    /**\n     * Open or close settings panel depending on `_open` property\n     * @example\n     * mySettings.toggle()\n     */\n    toggle() {\n        let panelBody = this._panel.childNodes[1]\n        panelBody.classList[1] === 'hide' ?\n            panelBody.classList.remove('hide') :\n            panelBody.classList.add('hide')\n        this._open = !this._open\n    }\n\n    /**\n     * Returns panel position [left, top]\n     * @return {array<number>}\n     * @example\n     * let position = mySettings.getPosition() // [0, 0]\n     */\n    getPosition() {\n        return [this.left, this.top]\n    }\n\n    /**\n     * Sets panel position\n     * @param {number} left - new position on the X axis\n     * @param {number} top - new position on the Y axis\n     * @example\n     * mySettings.setPosition(400, 400)\n     */\n    setPosition(left, top) {\n        this.left = left\n        this.top = top\n    }\n}\n\nexport default SmartSettings"],"names":["styleInject","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","SmartSettings","name","left","top","_visible","_open","_draggable","_panel","_controls","_create","attributes","element","key","classList","add","apply","panelAttributes","panel","_createElement","header","class","body","paragraph","innerText","parentElement","removeChild","remove","panelBody","childNodes"],"mappings":"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"}