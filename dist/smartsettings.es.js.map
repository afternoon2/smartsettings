{"version":3,"file":"smartsettings.es.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/index.js"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import style from './index.css'\n\n/**\n * @class SmartSettings\n * @classdesc SmartSettings module, returns new SmartSettings instance\n * @param {string} name - name of the SmartSettings panel\n * @param {number} left - position of the SmartSettings panel on X axis\n * @param {number} top - position of the SmartSettings panel on Y axis\n * @example\n * const mySettings = new SmartSettings('My Settings', 10, 10)\n*/\nclass SmartSettings {\n    constructor(name = 'SmartSettings', left = 0, top = 0) {\n        this.name = name\n        this.left = left\n        this.top = top\n\n        /**\n         * @property {boolean} _hidden\n         * @private\n         */\n        this._hidden = false\n\n        /**\n         * @property {boolean} _open\n         * @private\n         */\n        this._open = true\n\n        /**\n         * @property {boolean} _draggable\n         * @private\n         */\n        this._draggable = false\n\n        /**\n         * @property {Node} _panel\n         * @private\n         */\n        this._panel = null\n\n        /**\n         * @property {object} _controls\n         * @private\n         */\n        this._controls = {}\n\n        this._createUniqueId()\n        this._create(this.name, this.top, this.left)\n    }\n\n    /* Utility methods */\n\n    /**\n     * Creates unique element identifier\n     * @private\n     */\n    _createUniqueId() {\n        let counter = 0\n        window.uniqueId = () => `sms-id-${counter++}`\n    }\n     \n    /**\n     * Creates any DOM element\n     * @param {string} type - type of the DOM element\n     * @param {Object} attributes - object with all attributes for the DOM element\n     * @returns {Node}\n     * @private \n     */\n    _createElement(type, attributes) {\n        let element = document.createElement(type)\n        if (attributes) {\n            for (let key in attributes) {\n                if (key === 'class') {\n                    element.setAttribute('class', attributes[key])\n                } else {\n                    element[key] = attributes[key]\n                }\n            }\n        }\n        return element\n    }\n\n\n    /* Helper methods */\n\n    /**\n     * Creates settings panel, invoked on class construction\n     * @returns {void}\n     * @private\n     */\n    _create() {\n        let panelAttributes = {\n            class: 'sms-panel',\n            id: uniqueId(),\n            style: `top: ${this.top}px; left: ${this.left}px; z-index: 2`\n        }\n        let panel = this._createElement('div', panelAttributes)\n        let header = this._createElement('div', { class: 'sms-panel-header' })\n        let body = this._createElement('div', { class: 'sms-panel-body' })\n        let paragraph = this._createElement('p', { class: 'sms-panel-header-name' })\n\n        paragraph.innerText = this.name\n        header.appendChild(paragraph)\n        panel.appendChild(header)\n        panel.appendChild(body)\n        this._panel = panel\n        document.body.appendChild(this._panel)\n    }\n\n    /**\n     * Creates basic properties for the new control\n     * @returns {object}\n     * @private\n     */\n    _createControlBasics() {\n        let id = uniqueId()\n        let basics = {\n            id: id,\n            disabled: false,\n            hidden: false,\n            element: function() {\n                return document.getElementById(this.id)\n            },\n            enable: function() {\n                this.element().removeAttribute('disabled')\n                this.disabled = false\n            },\n            disable: function() {\n                this.element().setAttribute('disabled', true)\n                this.disabled = true\n            },\n            show: function() {\n                if (this.element().classList[2] === 'hide') {\n                    this.element().classList.remove('hide')\n                    this.hidden = false\n                }\n            },\n            hide: function() {\n                if (this.element().classList[2] !== 'hide') {\n                    this.element().classList.add('hide')\n                    this.hidden = true\n                }\n            },\n            remove: function() {\n                delete self._controls[name]\n                this.element().remove()\n            }\n        }\n        return basics\n    }\n\n    /* Basic methods */\n\n    /**\n     * Removes settings panel from the DOM and removes all sections and controls\n     * @returns {void}\n     * @example\n     * mySettings.destroy()\n     */\n    destroy() {\n        if (this._panel && this._panel.parentElement) {\n            this._panel.parentElement.removeChild(this._panel)\n        }\n        this._panel = null\n        this._controls = {}\n    }\n\n    /**\n     * Shows settings panel\n     * @returns {void}\n     * @example\n     * mySettings.show()\n     */\n    show() {\n        this._panel.classList.remove('hide')\n        this._hidden = false\n    }\n\n    /**\n     * Hides settings panel\n     * @returns {void}\n     * @example\n     * mySettings.hide()\n     */\n    hide() {\n        this._panel.classList.add('hide')\n        this._hidden = true\n    }\n\n    /**\n     * Open settings panel\n     * @example\n     * mySettings.open()\n     */\n    open() {\n        let panelBody = this._panel.childNodes[1]\n        if (panelBody.classList[1] === 'hide') {\n            panelBody.classList.remove('hide')\n        } \n        this._open = true\n    }\n\n    /**\n     * Close settings panel\n     * @example\n     * mySettings.close()\n     * \n     */\n    close() {\n        let panelBody = this._panel.childNodes[1]\n        panelBody.classList.add('hide')\n        this._open = false\n    }\n\n    /**\n     * Open or close settings panel depending on `_open` property\n     * @example\n     * mySettings.toggle()\n     */\n    toggle() {\n        let panelBody = this._panel.childNodes[1]\n        panelBody.classList[1] === 'hide' ?\n            panelBody.classList.remove('hide') :\n            panelBody.classList.add('hide')\n        this._open = !this._open\n    }\n\n    /**\n     * Returns panel position [left, top]\n     * @return {array<number>}\n     * @example\n     * let position = mySettings.getPosition() // [0, 0]\n     */\n    getPosition() {\n        return [this.left, this.top]\n    }\n\n    /**\n     * Sets panel position\n     * @param {number} left - new position on the X axis\n     * @param {number} top - new position on the Y axis\n     * @example\n     * mySettings.setPosition(400, 400)\n     */\n    setPosition(left, top) {\n        this.left = left\n        this.top = top\n    }\n\n    /**\n     * Creates button control\n     * @param {string} name - name of the control \n     * @param {function} callback - function executed on each change\n     */\n    button(name, callback) {\n        let body = this._panel.childNodes[1]\n        let base = this._createControlBasics()\n        let element = this._createElement('button', { \n            class: 'sms-control sms-button', \n            id: base.id \n        })\n\n        element.innerText = name\n        element.addEventListener('click', callback)\n\n        base.getValue = function() {\n            return base.element().innerText\n        }\n        \n        body.appendChild(element)\n        this._controls[name] = base\n        return this._controls[name]\n    }\n}\n\nexport default SmartSettings"],"names":["styleInject","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","SmartSettings","name","left","top","_hidden","_open","_draggable","_panel","_controls","_createUniqueId","_create","counter","uniqueId","attributes","element","key","setAttribute","panelAttributes","panel","_createElement","header","class","body","paragraph","innerText","id","basics","getElementById","removeAttribute","disabled","classList","remove","hidden","add","self","parentElement","removeChild","panelBody","childNodes","callback","base","_createControlBasics","addEventListener","getValue"],"mappings":"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"}